#include <iostream>
#include <fstream>
#include <cstdlib>
#include <bitset>
#include <cmath>

using namespace std;


double Q_Lib(double x, double y, double z);
double S_Lib(double x, double y, double z);


void task4_3()
{   setlocale(LC_ALL, "rus");   // локализация
    double x,y,z;               // обьявление переменных для последующего получения значений
    cout << "\tЗадача 4_3\n";
    int b;
    int mat = 20 ;
// Начало программы
cout << "\tЗадача № 4-3\n\n";

 // блок проверки и получения значения x
cout << "Введите значения для x" << endl;
while(!(cin >> x))
    {   cin.clear();
        cin.ignore(mat, '\n'); //удерживаем от дальнейшего выполнен
        cout << "\t\\Некорректное значение, повторите попытку:\\ \n "; };

// блок проверки и получения значения y
cout << "Введите значения для y" << endl;
while(!(cin >> y))
    {   cin.clear();
        cin.ignore(mat, '\n'); //удерживаем от дальнейшего выполнен
        cout << "\t\\Некорректное значение, повторите попытку:\\ \n "; };

// блок проверки и получения значения z
cout << "Введите значения для z" << endl;
while(!(cin >> z))
    {   cin.clear();
        cin.ignore(mat, '\n'); //удерживаем от дальнейшего выполнен
        cout << "\t\\Некорректное значение, повторите попытку:\\ \n "; };

// блок проверки и получения значения b
cout << "Введите значения для b" << endl;
while(!(cin >> b))
        {   cin.clear();
            cin.ignore(mat, '\n'); //удерживаем от дальнейшего выполнен
            cout << "\t\\Некорректное значение, повторите попытку:\\ \n "; };



double Q = Q_Lib(x,y,z);    // Вызов функции задачи 2_1
double S = S_Lib(x,y,z);    // Вызов функции задачи 2_2


ofstream outfile;                          // создание обьекта офстрим
outfile.open("D:\\KNTU\\предметы\\2 Семестр\\Модульное программирование\\Лабораторная\\Лабораторная  4\\проверочная\\Exit.txt", ios:: app);      // ассоциация файла с офсрим
if (!outfile.is_open()) {  cout << "close";}
else
{
outfile << "\nВходные значения переменных :"
        << "\nДля x = " << x
        << "\nДля y = " << y
        << "\nДля z = " << z << endl;
outfile <<"Результат подсчета в модуле Q_Lib : " << Q << endl;

outfile << "Результат подсчета в модуле S_Lib : " << S<< endl; ;

if ( b <= 0 )
{
    cout << "\nЗначение \"b\" должно быть больше нуля" <<  endl;  // фильтр для получения положительного результата
    outfile << "Результат Перевода натурального числа  ""B"" : "
        << b
        << "\nВ двоичную систему счисления не известен\n "
        << "из за введения не корректного значения ";
}
// вывод резултата перевода в консоль
else outfile << "Результат Перевода натурального числа  ""B"" : "
        << b
        << "\nВ двоичную систему счисления :" << "\\"
        << bitset<16>( b ) << "\\\n\n\n" << endl;
}
outfile.close();

}

double Q_Lib(double x, double y, double z)
{   double Q;
    setlocale(LC_ALL, "rus");                                        // локализация
   if ((x!=0) && (y!=0) && (z!=0)&& (z>0))                           // фильтр для получения положительного результата
   if ((abs((pow(z,2))*(exp(x))))/(12*x+(pow(y,2)-3.14*sqrt(z)))<=0) // вычисление
   cout << "Подкоренное выражение недолжно быть отрицательным";
   else Q = pow(x,z)-pow(y,3)+(sqrt(abs((pow(z,2))*(exp(x))))/(12*x+(pow(y,2)-3.14*sqrt(z))));
   else  cout<< " Ответ : Делить на ноль нельзя ";                   // если не выполнится первое условие  то выведется ссобщение
return Q;
}

double S_Lib(double x, double y, double z)
{
    double S;
    setlocale(LC_ALL, "rus");                                       // локализация
    if ((cos(z+z*y)+ pow(x,2))<=0)                              // условия для получения подкоренного положительного значения
    cout << "Подкоренное выражение недолжно быть отрицательным\n\n";
    else
    S = z+3.14*(pow((2*z+1),2)-sqrt(abs(y-(z/2)))/sqrt(cos(z+z*y)+ pow(x,2)));
    return S;
}

