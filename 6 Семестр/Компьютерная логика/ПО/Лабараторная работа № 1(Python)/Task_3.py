import sys

'''
1) Вхідні дані: рядок, передається в програму як аргумент командного рядка.
 Може містити пробіли, літери латинського алфавіту в будь-якому регістрі та цифри. 
Результат роботи: рядок "YES", якщо отриманий рядок є паліндромом, або "NO" - якщо ні.
'''
def task_1(string):
    # отображение полученных аргументов
    print("Вхідні дані:" + ' ' + string);
    # перевод в нижний регистр так как регистр не учитывается
    string = string.lower();
    # удаляем пробелы так как пробелы не учитываются
    string = string.replace(' ', '');
    # определяем новую строку представленную в обратном порядке
    new_string  = string[::-1];
    # сравнение
    if string  ==  new_string:
        print( "YES");
    else:
        print ("NO");

'''
2) Вхідні дані: довільна, відмінна від нуля, кількість значень - аргументів командного рядка. 
Значеннями-аргументами можуть бути числа або рядки, 
які складаються з цифр та літер латинського алфавіту без пробілів.
Результат роботи: рядок, що складається з отриманих значень в зворотньому порядку, 
записаних через пробіл. Пробіл в кінці рядка відсутній.
'''
def task_2(string):
    # отображение полученных аргументов
    print("Вхідні дані:" + ' ' + string);
    # определяем список
    lists = []
    # определяем слова учитывая разделитель "пробел"
    lists = string.split(" ");
    # разворачиваем в обратном порядке
    lists.reverse();
    print(' '.join(lists));

'''
Вхідні дані: рядок, що складається з відкриваючих та закриваючих круглих дужок - аргумент командного рядка.
Результат роботи: рядок "YES", якщо вхідний рядок містить правильну дужкову послідовність; або рядок "NO"
'''
def task_3(string):
    # отображение полученных аргументов
    print("Вхідні дані:" + '' + string);
    # определяем список для хранения всех скобок
    backets = [];
    # определяем счетчики для левой и правой скобки
    open_count  = 0;
    close_count = 0;
    # проход по строке и выявленые скобки добавляем в список
    for symbol in string:
        if symbol == '(' :
            open_count += 1;
            backets.append(symbol);
        elif symbol == ')' :
            close_count += 1;
            backets.append(symbol);
    # минимальная проверка (оптимизация по большие строки)
    if len(backets)%2  != 0 or open_count != close_count or backets[0] == ')' or backets[len(backets)-1] == '(':
        print("NO")
        return;
    # счетчик для проверки
    open_count  = 0;
    for b in backets:                       # проход по списку
        if  b == '(' :
            open_count += 1;
        elif b == ')' and open_count > 0 :
             open_count -= 1;
        elif b == ')' and open_count == 0: # если нашли правую скобку а ей нет пары то
            print("NO");
            return;
    print("YES");

'''
Завдання передбачає пошук "щасливих" квитків.
Результат роботи: кількість "щасливих квитків", чиї номери лежать на проміжку від a1 до a2 включно
'''
def task_4(a,b):
    # отображение полученных аргументов
    print("Вхідні дані:" + ' ' + str(a) + ' ' + str(b));

    counter = 0;                            # cчетчик совпадений
    for i in range(a,b):
        argument = str(i);
        arg_len  = len(argument);

        if  arg_len < 6:
            need = '0'* (6 - arg_len);
            argument = need + argument;

        first_part  = str(argument[:3]);
        second_part = str(argument[3:]);
        f = 0;
        r = 0;

        for s in first_part:
            f = f + int(s);


        for s in second_part:
            r = r +  int(s);

        if r == f:
            counter =counter +  1;

    print("Результат: " + str(counter));

# начало алгоритма
arg_count  = len(sys.argv);         # определение количества аргументов не учитывая имя файла
task = 0;                           # номер задания для выполнения идет вторым аргументом после имени файла

if arg_count >=3:                   # минимальное необходимое количество аргументов
    task = int(sys.argv[1]);        # определенияем задание
else:
    print("Не достаточно аргументов");
    exit(1)

arguments = []                      # список для аргументов
for index in range(2, arg_count):   # получаем все аргументы кроме имени файла и номера задания
    arguments.append(sys.argv[index]);

if  task == 1 :                     # если задание номер 1
    task_1(''.join(arguments));
elif task == 2:                     # если задание номер 2
    task_2(''.join(arguments));
elif task == 3:                     # если задание номер 3
    task_3(''.join(arguments));
elif task == 4:                     # если задание номер 4
    a = int(sys.argv[2]);           # определение необходимых аргументов
    b = int(sys.argv[3]);           # определение необходимых аргументов

    # проверка условия задания 4
    if a >= 0 and a <= b and b <= 999999:
        task_4(a, b);
    else:
        print("Не корректные аргументы  ");
else:
    print("Не корректные аргументы  ");
